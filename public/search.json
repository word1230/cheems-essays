[{"categories":["分类"],"content":"微习惯","date":"2025-10-20","objectID":"/posts/cbb9bd44/","tags":null,"title":"微习惯","uri":"/posts/cbb9bd44/"},{"categories":["分类"],"content":"Overview: 111\r111 111\r111 ","date":"2025-10-20","objectID":"/posts/cbb9bd44/:0:0","tags":null,"title":"微习惯","uri":"/posts/cbb9bd44/"},{"categories":["分类"],"content":"本文详细介绍了在Hugo中，由于文章的URL包含中文或特殊字符，导致FixIt主题下大纲（Table of Contents）无法渲染的bug，并提供了通过配置slug和permalink实现的终极解决方案","date":"2025-10-20","objectID":"/posts/cbb9bd42/","tags":null,"title":"hugo大纲（目录）无法显示的bug解决","uri":"/posts/cbb9bd42/"},{"categories":["分类"],"content":"Contents: 问题描述 解决方法 环境说明: 操作系统: Windows 10 Hugo 版本: v0.151.2 主题: FixIt 问题描述\r现象复现\r当我的文章存储在包含中文路径时，问题就会出现。例如，我的源文件路径如下：根目录/content/posts/学习 Java/Java 基础.md 在 hugo server 本地预览或部署后，访问该文章页面，会发现右侧的大纲目录完全不显示。但是，文章内容本身是正常的。 原因分析\rHugo 默认会根据你的文件路径来生成文章的 URL。对于上述路径，生成的 URL 可能会是这样的：https://your-site/posts/学习 Java/Java 基础/ 问题就出在这个 URL 上。URL 中包含了未经处理的中文字符 大多数主题（包括 FixIt）的大纲功能是依靠 JavaScript 在前端动态生成的。这些脚本需要解析当前页面的 URL 来定位标题、生成链接。当 URL 包含这些非标准的特殊字符时，JavaScript 的 URL encoder 或解析器可能会出错，导致脚本无法正确定位或执行，最终使得大纲生成失败。 简单来说，罪魁祸首是包含了特殊字符的“脏”URL，而不是 Hugo 本身或主题的 Bug。 解决： 配置永久链接（Permalinks）与 Slug（推荐）\r既然 url 出了问题，修改生成的 url 即可 原理： 将文章的URL与它的文件路径解耦，改用一个唯一的、URL友好的标识符（slug）来生成链接。 思路： 让文章对应的 url 变为： https://your-site/posts/随机字符串 操作步骤 打开 根目录/config/_default/hugo.toml 搜索 [permalinks] 在其下增加一行 posts = \"/:section/:slug/\" [permalinks] posts = \"/:section/:slug/\" # 设置生成的url 打开根目录/archetypes/default.md 在元信息添加一行 slug: {{ substr (md5 (printf \"%s%d\" .Name now.Unix)) 0 8 }} # 随机生成8位字符串 同时为了保证本地使用的多级目录可以被识别,元信息需要添加 type字段 type: posts 效果： url 变为了 https://your-site/posts/cbb9x342 ，而且不管本地多少目录层级都可以识别到。 ","date":"2025-10-20","objectID":"/posts/cbb9bd42/:0:0","tags":null,"title":"hugo大纲（目录）无法显示的bug解决","uri":"/posts/cbb9bd42/"},{"categories":["分类"],"content":"CliProxyAPI","date":"2025-10-20","objectID":"/posts/cbb9bd43/","tags":null,"title":"CliProxyAPI","uri":"/posts/cbb9bd43/"},{"categories":["分类"],"content":"Overview: 工具的作用 如何使用 qwen iflow 第三方站 工具的作用\r由于很多用于编程cli免费额度的有很多，比如qwen coder， gemini cli等 但是编程基本用不完，就浪费掉每天的额度了，这个工具的作用就是将这些额度转为一个api key，方便在其他地方调用,而不只是用来编程（实际原理可能不是这样） 如何使用\rqwen cli 和iflow\r首先要安装cliproxyAPI 从这里 https://github.com/router-for-me/CLIProxyAPI 下载应用并解压 得到如图所示的目录 配置 将config.example.yaml文件重命名为 connfig.yaml 打开它 找到auth-dir:这一项， 改为软件的解压目录/auths, 例如：D:\\\\Program Files\\\\CLIProxyAPI_6.2.19_windows_amd64\\\\auths api-keys: 这一项， 设置被代理后生成的api-key。 后面在软件中填写的base-url 和 api-key 填的就是这个 然后在当前目录打开cmd ，输入命令： cli-proxy-api --qwen-login 确认登录即可 使用 此时可以打开根目录的exe文件 然后就可以使用了 比如在cherry studio中 就可以 iflow也同理 在配置这一步的第三点中：改为执行 ./cli-proxy-api --iflow-login 授权即可 第三方中转站（claude code，codex中转）\r打开配置文件 找到openai-compatibility:项 填写base-url，api-key，models即可 打开exe即可使用 ","date":"2025-10-20","objectID":"/posts/cbb9bd43/:0:0","tags":null,"title":"CliProxyAPI","uri":"/posts/cbb9bd43/"}]